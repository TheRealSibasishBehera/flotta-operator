#!/bin/bash

usage()
{
cat << EOF
Usage: $0 OPTIONS
This script installs Flotta agent component on RPM-compatible machine.
OPTIONS:
   -h      Show this message
   -i      IP address under which your Flotta edge API endpoint is accessible to the device.
           For testing, when your KUBECONFIG is pointing to cluster with Flotta operator deployed, you can run

           kubectl port-forward service/flotta-edge-api -n flotta 8043 --address 0.0.0.0

           to make the Flotta API accessible from your machine
   -p      Port to connect to Flotta API, default 8043
EOF
}

FLOTTA_PORT=8043

while getopts "i:h:p:" option; do
    case "${option}"
    in
        i) FLOTTA_API_IP=${OPTARG};;
        p) FLOTTA_PORT=${OPTARG};;
        h)
            usage
            exit 0
            ;;
        *)
            usage
            exit 1
            ;;
    esac
done

if [[ -z $FLOTTA_API_IP ]]; then
    echo "ERROR: Flotta API IP is required"
    usage
    exit 1
fi

curl https://copr.fedorainfracloud.org/coprs/project-flotta/flotta/repo/fedora-35/project-flotta-flotta-fedora-35.repo -o /etc/yum.repos.d/project-flotta.repo

dnf -y install node_exporter yggdrasil flotta-agent

cat <<EOF >> /etc/hosts
$FLOTTA_API_IP project-flotta.io
EOF

mkdir -p /etc/pki/consumer
cat <<EOF > /etc/pki/consumer/ca.pem
<CA_PEM>
EOF

cat <<EOF > /etc/pki/consumer/key.pem
<KEY_PEM>
EOF

cat <<EOF > /etc/pki/consumer/cert.pem
<CERT_PEM>
EOF

cat <<EOF > /etc/yggdrasil/config.toml
<CONFIG_TOML>
EOF

systemctl disable --now firewalld.service
systemctl enable --now nftables.service
systemctl enable --now podman.service
systemctl enable --now podman.socket
systemctl enable --now yggdrasild.service
